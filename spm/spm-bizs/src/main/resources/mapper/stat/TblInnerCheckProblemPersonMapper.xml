<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ts.spm.bizs.mapper.stat.TblInnerCheckProblemPersonMapper" >
  <resultMap id="BaseResultMap" type="com.ts.spm.bizs.entity.stat.TblInnerCheckProblemPerson" >
    <!--
      WARNING - @mbg.generated
    -->
    <result column="ID" property="id" jdbcType="INTEGER" />
    <result column="PROB_ID" property="probId" jdbcType="INTEGER" />
    <result column="CHECK_ID" property="checkId" jdbcType="INTEGER" />
    <result column="CHECKER_NAME" property="checkerName" jdbcType="VARCHAR" />
    <result column="CHECKER_ID" property="checkerId" jdbcType="VARCHAR" />
    <result column="AJY_TYPE" property="ajyType" jdbcType="DECIMAL" />
    <result column="AJY_TYPE_STR" property="ajyTypeStr" jdbcType="VARCHAR" />
    <result column="CRT_TIME" property="crtTime" jdbcType="TIMESTAMP" />
    <result column="CRT_USER_ID" property="crtUserId" jdbcType="VARCHAR" />
    <result column="CRT_USER_NAME" property="crtUserName" jdbcType="VARCHAR" />
    <result column="UPD_TIME" property="updTime" jdbcType="TIMESTAMP" />
    <result column="UPD_USER_ID" property="updUserId" jdbcType="VARCHAR" />
    <result column="UPD_USER_NAME" property="updUserName" jdbcType="VARCHAR" />
    <result column="TENANT_ID" property="tenantId" jdbcType="VARCHAR" />
  </resultMap>

  <insert id="addInnerCheckProblemPerson" parameterType="com.ts.spm.bizs.entity.stat.TblInnerCheckProblemPerson" >
    <selectKey resultType="java.lang.Integer" order="BEFORE" keyProperty="id">
      SELECT TBL_INNER_PERSON_ID_SEQ.NEXTVAL FROM DUAL
    </selectKey>
    insert into TBL_INNER_CHECK_PROBLEM_PERSON(
      ID,PROB_ID,CHECK_ID,CHECKER_NAME,AJY_TYPE,AJY_TYPE_STR,CRT_TIME,CRT_USER_ID,CRT_USER_NAME,TENANT_ID
    )
    values(
    #{id},#{tblInnerCheckProblemPerson.probId},#{tblInnerCheckProblemPerson.checkId},#{tblInnerCheckProblemPerson.checkerName},
    #{tblInnerCheckProblemPerson.ajyType},#{tblInnerCheckProblemPerson.ajyTypeStr},#{tblInnerCheckProblemPerson.crtTime},
    #{tblInnerCheckProblemPerson.crtUserId},#{tblInnerCheckProblemPerson.crtUserName},#{tblInnerCheckProblemPerson.tenantId}
    )
  </insert>

  <select id="getId" resultType="java.lang.Integer">
    SELECT nextval('TblInnerCheckProblemPerson')
  </select>


  <delete id="deleInnerCheckProblemPerson" parameterType="java.lang.Integer">
    delete from TBL_INNER_CHECK_PROBLEM_PERSON where CHECK_ID=#{checkId}
  </delete>

  <resultMap id="listResult" type="java.util.Map" >
    <result column="CHECKER_NAME" property="checkerName" jdbcType="VARCHAR" />
    <result column="CHECKER_ID" property="checkerId" jdbcType="VARCHAR" />
    <result column="AJY_TYPE" property="ajyType" jdbcType="VARCHAR" />
    <result column="AJY_TYPE_STR" property="ajyTypeStr" jdbcType="VARCHAR" />
    <result column="CHECK_TIME" property="checkTime" jdbcType="VARCHAR" />
    <result column="COUNT" property="count" jdbcType="INTEGER" />
  </resultMap>

  <select id="getPersonCheckList" resultMap="listResult">
    SELECT MAX(t.checker_name) AS checkerName, t.CHECK_TIME, COUNT(t.*) AS COUNT, t.checker_id,t.AJY_TYPE,t.AJY_TYPE_STR
    FROM
    (select p.*,c.CHECK_TIME,c.POINT_ID
    from TBL_INNER_CHECK_PROBLEM_PERSON p,TBL_INNER_CHECK c
    where p.CHECK_ID=c.CHECK_ID
    <if test="startTime!=null and startTime != ''">
      AND DATE_FORMAT(c.CHECK_TIME,'%Y-%m-%d') &gt;= #{startTime}
    </if>
    <if test="endTime!=null and endTime != ''">
      AND DATE_FORMAT(c.CHECK_TIME,'%Y-%m-%d') &lt;= #{endTime}
    </if>
    <if test="ajyIdcard!=null and ajyIdcard != ''">
      AND p.CHECKER_ID like CONCAT(CONCAT('%',#{ajyIdcard}),'%')
    </if>
    <if test="ajyName!=null and ajyName != ''">
      AND p.CHECKER_NAME like CONCAT(CONCAT('%',#{ajyName}),'%')
    </if>
    <if test="ajyType!=null and ajyType != ''">
      AND p.AJY_TYPE=#{ajyType}
    </if>

    <if test="pointIds!=null and pointIds.size>0">
      and  c.POINT_ID in
      <foreach close=")" collection="pointIds" index="index" item="pointIds" open="(" separator=",">
        #{pointIds}
      </foreach>
    </if>
    ) t
    group by t.checker_id

  </select>
</mapper>